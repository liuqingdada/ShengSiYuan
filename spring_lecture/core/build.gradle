buildscript {
    ext {
        springVersion = '5.2.2.RELEASE'
        kotlinVersion = '1.3.72'
    }

    repositories {
        /*maven {
            url 'https://repo.spring.io/release'
        }*/

        maven {
            url 'https://maven.aliyun.com/repository/google/'
        }

        maven {
            url 'https://maven.aliyun.com/repository/jcenter/'
        }

        mavenCentral()
        google()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
    }
}

apply {
    plugin("java")
    plugin("maven")
    plugin("idea")
    plugin("org.jetbrains.kotlin.jvm")
    plugin("org.jetbrains.kotlin.kapt")
}

group 'com.shengsiyuan'
version '1.0'

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    /*maven {
        url 'https://repo.spring.io/release'
    }*/

    maven {
        url 'https://maven.aliyun.com/repository/google/'
    }

    maven {
        url 'https://maven.aliyun.com/repository/jcenter/'
    }

    mavenCentral()
    google()
    jcenter()
}

dependencies {
    implementation(
            "org.springframework:spring-core:${springVersion}",
            "org.springframework:spring-aop:${springVersion}",
            "org.springframework:spring-beans:${springVersion}",
            "org.springframework:spring-context:${springVersion}",
            "org.springframework:spring-context-support:${springVersion}",
            ///////////
            ///////////
            "org.springframework:spring-web:${springVersion}",
            "org.springframework:spring-orm:${springVersion}",
            "org.springframework:spring-aspects:${springVersion}",
            "org.springframework:spring-webmvc:${springVersion}",
            "org.springframework:spring-jdbc:${springVersion}",
            "org.springframework:spring-instrument:${springVersion}",
            "org.springframework:spring-tx:${springVersion}"
    )
    implementation(
            "org.jetbrains.kotlin:kotlin-reflect",
            "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

[compileJava, javadoc, compileTestJava]*.options*.encoding = "UTF-8"
